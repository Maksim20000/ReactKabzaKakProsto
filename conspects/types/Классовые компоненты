1) Создаем класс  обычном JS

class Man {
            constructor(name, age){
                this.name = name
                this.age = age
                console.log(this.name)
                console.log(this.age)
            }
        }
let petyTable = new Man('Петя', 154)

2) оздаем класс в React
class Man extends React.Component - наследуется от другого класса расширить {

            Эту часть можно опустить
            constructor(props){
                super(props) - родительский конструктор
            }

						componentDidMount() { -метод который вызывается при запуске класс самый первый
				        let userId = this.props.router.params.userId
				        if(!userId){
		            userId = 2
		        }

		     
            Методы
            onClick = () => {...}
            ИЛИ
            onClick() {...}
            render(){
                return(
                    <div>
                        {this.props.name} {this.props.age}
                    </div>
                )
            }
        }

3) componentDidUpdate - перерисовывает компоненту в render
    componentDidUpdate(prevProps, prevState) {
            debugger
            let a = this.state
            let b = this.props

        }

    никогда так не делать а то зациклица и не будет работать
    componentDidUpdate(prevProps, prevState) {
            this.setState({
                status: this.props.status,

            })
        }

    нужно сдклать условие после которого не должно действие повториться
     componentDidUpdate(prevProps - прошлые или старые пропсы, prevState) {
            if(prevProps.status !== this.props.status){
                this.setState({
                    status: this.props.status,

                })}
        }